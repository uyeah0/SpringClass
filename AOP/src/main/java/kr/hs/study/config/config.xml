<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
 						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop.xsd">

	<bean id = "advisor" class = "kr.hs.study.advisor.AdvisorClass"/>
	<bean id = "t1" class = "kr.hs.study.beans.TestBean1"/>
	
	<aop:config>
		<aop:aspect ref = "advisor">
		<aop:pointcut expression="execution(* method1())" id="point"/>
		<!-- 
		* : 리턴타임 상관없고, 모든패키지, 모든 클래스에 있는 모든 method1()을 pointcut으로 지정 advice로 지정 
		-->
		 
		<!--  <aop:before method="beforeMethod" pointcut-ref = "point"/> -->
		<!-- method1이 실행되기 전에 beforeMethod가 먼저 실행된다. -->
		
		<!-- afterMethod실행하게해보기 -->
		<!-- <aop:after method="afterMethod"	pointcut-ref="point"/>--> 
		
		<aop:around method="aroundMethod" 	pointcut-ref="point"/>
		<aop:after-returning method="afterReturningMethod" pointcut-ref="point"/>
 		<aop:after-throwing method="afterThrowingMethod" pointcut-ref="point" throwing="e"/>
		</aop:aspect>
	</aop:config>
										
</beans>